package com.ict.day15;

public class Ex06_InnerClass {
/*
 내부클래스 : 클래스 안에 다른 클래스가 정의 되어 있는 클래스
 종류: Member(멤버),Local(지역), static, Anonymous(익명)
 1.Member 내부클래스 : 내부클래스는 외부 클래스의 멤버필드와 멤버메서드를 마음대로 사용 가능( 상속과 비슷)
 					단 상속 private 접근 불가 ,
 					내부 클래스는 private는 접근 가능
 					외부클래스를 통해서나 내부클래스를 생성할 수 있다.
 					(내부클래스 별도로 생성 불가능)
   외부클래스{
   		멤버필드;
   		멤버메서드();
   		내부클래스{
   			내부클래스 멤버필드;
   			내부클래스 멤버메서드();
   		}
   		
   }
   
   2. Local 내부 클래스 : 외부클래스의 메서드 안에 내부 클래스가 존재
   						외부클래스에서는 지역변수처럼 사용한다.
   						내부클래스를 가진 외부클래스의 메서드가 실행되어야 내부클래스를 생성할 수 있다.
   						지역변수 처럼 사용되기 때문에 내부클래스 가진 외부 클래스의 메서드가 종류되면,
   						내부 클래스도 사라진다.
   	 외부클래스{
   		멤버필드;
   		멤버메서드(){
   			내부클래스{
   				내부클래스 멤버필드;
   				내부클래스 멤버메서드();
   			}//내부 클래스 끝
   		
   	}//외부 클래스 메서드 끝
   }//외부 클래스 끝
   
   3. static 내부 클래스 : Member 내부클래스와 같은 구조를 가지고 있음
   						단, 내부클래스의 멤버변수 중 하나라도 static 있으면
   						매부클래스 자체를 static으로 만들어야 한다.
   						접근법은 static 접근법과 같다.(내부클래스 이름.변수이름)
   						
   	 외부클래스{
   		멤버필드;
   		멤버메서드();
   		static 내부클래스{
   			내부클래스 멤버필드;
   			static 내부클래스 멤버필드;
   			내부클래스 멤버메서드();
   		}

   }
   
   4.Anonymous(익명) 내부 클래스 : 정의된 클래스의 이름이 없는 클래스
   								이름이 없으므로 다시 호출 할 수 없다
   								일회용으로 한번 사용되고 다시 사용할 수 없다.
   								
   	외부클래스{
   		...
   		내부클래스 참조변수 = new 생성자(){
   			...
   		};
   		...
   		public void methodA(){
   		 new 내부 클래스(){
   		 ...
   		 };
   		}
   		
   		public void methodB(new 내부클래스(){
   		...
   		});
   		
   	}
 */

}
